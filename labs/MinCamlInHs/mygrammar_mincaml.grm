(CFG "Start" [
 ProductionRule "Start" [Nonterminal "Exp"],
 ProductionRule "SimpleExp" [Terminal "(", Nonterminal "Exp", Terminal ")"],
 ProductionRule "SimpleExp" [Terminal "(", Terminal ")"],
 ProductionRule "SimpleExp" [Terminal "true"],
 ProductionRule "SimpleExp" [Terminal "false"],
 ProductionRule "SimpleExp" [Terminal "int"],
 ProductionRule "SimpleExp" [Terminal "float"],
 ProductionRule "SimpleExp" [Terminal "ident"],
 ProductionRule "SimpleExp" [Nonterminal "SimpleExp", Terminal ".", Terminal "(", Nonterminal "Exp", Terminal ")"],
 ProductionRule "Exp" [Nonterminal "SimpleExp"],
 ProductionRule "Exp" [Terminal "not", Nonterminal "Exp"],
 ProductionRule "Exp" [Terminal "-", Nonterminal "Exp"],
 ProductionRule "Exp" [Nonterminal "Exp", Terminal "+", Nonterminal "Exp"],
 ProductionRule "Exp" [Nonterminal "Exp", Terminal "-", Nonterminal "Exp"],
 ProductionRule "Exp" [Nonterminal "Exp", Terminal "=", Nonterminal "Exp"],
 ProductionRule "Exp" [Nonterminal "Exp", Terminal "<>", Nonterminal "Exp"],
 ProductionRule "Exp" [Nonterminal "Exp", Terminal "<", Nonterminal "Exp"],
 ProductionRule "Exp" [Nonterminal "Exp", Terminal ">", Nonterminal "Exp"],
 ProductionRule "Exp" [Nonterminal "Exp", Terminal "<=", Nonterminal "Exp"],
 ProductionRule "Exp" [Nonterminal "Exp", Terminal ">=", Nonterminal "Exp"],
 ProductionRule "Exp" [Terminal "if", Nonterminal "Exp", Terminal "then", Nonterminal "Exp", Terminal "else", Nonterminal "Exp"],
 ProductionRule "Exp" [Terminal "-.", Nonterminal "Exp"],
 ProductionRule "Exp" [Nonterminal "Exp", Terminal "+.", Nonterminal "Exp"],
 ProductionRule "Exp" [Nonterminal "Exp", Terminal "-.", Nonterminal "Exp"],
 ProductionRule "Exp" [Nonterminal "Exp", Terminal "*.", Nonterminal "Exp"],
 ProductionRule "Exp" [Nonterminal "Exp", Terminal "/.", Nonterminal "Exp"],
 ProductionRule "Exp" [Terminal "let", Terminal "ident", Terminal "=", Nonterminal "Exp", Terminal "in", Nonterminal "Exp"],
 ProductionRule "Exp" [Terminal "let", Terminal "rec", Nonterminal "FunDef", Terminal "in", Nonterminal "Exp"],
 ProductionRule "Exp" [Nonterminal "SimpleExp", Nonterminal "ActualArgs"],
 ProductionRule "Exp" [Nonterminal "Elems"],
 ProductionRule "Exp" [Terminal "let", Terminal "(", Nonterminal "Pat", Terminal ")", Terminal "=", Nonterminal "Exp", Terminal "in", Nonterminal "Exp"],
 ProductionRule "Exp" [Nonterminal "SimpleExp", Terminal ".", Terminal "(", Nonterminal "Exp", Terminal ")", Terminal "<-", Nonterminal "Exp"],
 ProductionRule "Exp" [Nonterminal "Exp", Terminal ";", Nonterminal "Exp"],
 ProductionRule "Exp" [Terminal "Array.create", Nonterminal "SimpleExp", Nonterminal "SimpleExp"],
 ProductionRule "Exp" [Terminal "error"],
 ProductionRule "FunDef" [Terminal "ident", Nonterminal "FormalArgs", Terminal "=", Nonterminal "Exp"],
 ProductionRule "FormalArgs" [Terminal "ident", Nonterminal "FormalArgs"],
 ProductionRule "FormalArgs" [Terminal "ident"],
 ProductionRule "ActualArgs" [Nonterminal "ActualArgs", Nonterminal "SimpleExp"],
 ProductionRule "ActualArgs" [Nonterminal "SimpleExp"],
 ProductionRule "Elems" [Nonterminal "Elems", Terminal ",", Nonterminal "Exp"],
 ProductionRule "Elems" [Nonterminal "Exp", Terminal ",", Nonterminal "Exp"],
 ProductionRule "Pat" [Nonterminal "Pat", Terminal ",", Terminal "ident"],
 ProductionRule "Pat" [Terminal "ident", Terminal ",", Terminal "ident"]
 ]
,
TokenAttrs [("in",(Nonassoc,1)),("prec_let",(Right,2)),(";",(Right,3)),("prec_if",(Right,4)),("<-",(Right,5)),("prec_tuple",(Nonassoc,6)),(",",(Left,7)),("=",(Left,8)),("<>",(Left,8)),("<",(Left,8)),(">",(Left,8)),("<=",(Left,8)),(">=",(Left,8)),("+",(Left,9)),("-",(Left,9)),("+.",(Left,9)),("-.",(Left,9)),("*.",(Left,10)),("/.",(Left,10)),("prec_unary_minus",(Right,11)),("prec_app",(Left,12)),(".",(Left,13))],
ProdRuleAttrs [(10,(Left,12)),(11,(Right,11)),(20,(Right,4)),(21,(Right,11)),(26,(Right,2)),(27,(Right,2)),(28,(Left,12)),(29,(Nonassoc,6)),(33,(Left,12)),(38,(Left,12)),(39,(Left,12))],
"$")
