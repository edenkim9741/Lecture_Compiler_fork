0	(	Shift 4
0	-	Shift 11
0	-.	Shift 13
0	Array.create	Shift 15
0	error	Shift 16
0	false	Shift 6
0	float	Shift 8
0	ident	Shift 9
0	if	Shift 12
0	int	Shift 7
0	let	Shift 14
0	not	Shift 10
0	true	Shift 5
1	*.	Shift 27
1	+	Shift 18
1	+.	Shift 26
1	,	Shift 30
1	-	Shift 17
1	-.	Shift 25
1	/.	Shift 28
1	;	Shift 29
1	<	Shift 21
1	<=	Shift 23
1	<>	Shift 20
1	=	Shift 19
1	>	Shift 22
1	>=	Shift 24
1	$	Accept
2	(	Shift 4
2	)	Reduce 9
2	*.	Reduce 9
2	+	Reduce 9
2	+.	Reduce 9
2	,	Reduce 9
2	-	Reduce 9
2	-.	Reduce 9
2	.	Shift 33
2	/.	Reduce 9
2	;	Reduce 9
2	<	Reduce 9
2	<=	Reduce 9
2	<>	Reduce 9
2	=	Reduce 9
2	>	Reduce 9
2	>=	Reduce 9
2	else	Reduce 9
2	false	Shift 6
2	float	Shift 8
2	ident	Shift 9
2	in	Reduce 9
2	int	Shift 7
2	then	Reduce 9
2	true	Shift 5
2	$	Reduce 9
3	)	Reduce 29
3	*.	Reduce 29
3	+	Reduce 29
3	+.	Reduce 29
3	,	Shift 34
3	-	Reduce 29
3	-.	Reduce 29
3	/.	Reduce 29
3	;	Reduce 29
3	<	Reduce 29
3	<=	Reduce 29
3	<>	Reduce 29
3	=	Reduce 29
3	>	Reduce 29
3	>=	Reduce 29
3	else	Reduce 29
3	in	Reduce 29
3	then	Reduce 29
3	$	Reduce 29
4	(	Shift 4
4	)	Shift 36
4	-	Shift 11
4	-.	Shift 13
4	Array.create	Shift 15
4	error	Shift 16
4	false	Shift 6
4	float	Shift 8
4	ident	Shift 9
4	if	Shift 12
4	int	Shift 7
4	let	Shift 14
4	not	Shift 10
4	true	Shift 5
5	(	Reduce 3
5	)	Reduce 3
5	*.	Reduce 3
5	+	Reduce 3
5	+.	Reduce 3
5	,	Reduce 3
5	-	Reduce 3
5	-.	Reduce 3
5	.	Reduce 3
5	/.	Reduce 3
5	;	Reduce 3
5	<	Reduce 3
5	<=	Reduce 3
5	<>	Reduce 3
5	=	Reduce 3
5	>	Reduce 3
5	>=	Reduce 3
5	else	Reduce 3
5	false	Reduce 3
5	float	Reduce 3
5	ident	Reduce 3
5	in	Reduce 3
5	int	Reduce 3
5	then	Reduce 3
5	true	Reduce 3
5	$	Reduce 3
6	(	Reduce 4
6	)	Reduce 4
6	*.	Reduce 4
6	+	Reduce 4
6	+.	Reduce 4
6	,	Reduce 4
6	-	Reduce 4
6	-.	Reduce 4
6	.	Reduce 4
6	/.	Reduce 4
6	;	Reduce 4
6	<	Reduce 4
6	<=	Reduce 4
6	<>	Reduce 4
6	=	Reduce 4
6	>	Reduce 4
6	>=	Reduce 4
6	else	Reduce 4
6	false	Reduce 4
6	float	Reduce 4
6	ident	Reduce 4
6	in	Reduce 4
6	int	Reduce 4
6	then	Reduce 4
6	true	Reduce 4
6	$	Reduce 4
7	(	Reduce 5
7	)	Reduce 5
7	*.	Reduce 5
7	+	Reduce 5
7	+.	Reduce 5
7	,	Reduce 5
7	-	Reduce 5
7	-.	Reduce 5
7	.	Reduce 5
7	/.	Reduce 5
7	;	Reduce 5
7	<	Reduce 5
7	<=	Reduce 5
7	<>	Reduce 5
7	=	Reduce 5
7	>	Reduce 5
7	>=	Reduce 5
7	else	Reduce 5
7	false	Reduce 5
7	float	Reduce 5
7	ident	Reduce 5
7	in	Reduce 5
7	int	Reduce 5
7	then	Reduce 5
7	true	Reduce 5
7	$	Reduce 5
8	(	Reduce 6
8	)	Reduce 6
8	*.	Reduce 6
8	+	Reduce 6
8	+.	Reduce 6
8	,	Reduce 6
8	-	Reduce 6
8	-.	Reduce 6
8	.	Reduce 6
8	/.	Reduce 6
8	;	Reduce 6
8	<	Reduce 6
8	<=	Reduce 6
8	<>	Reduce 6
8	=	Reduce 6
8	>	Reduce 6
8	>=	Reduce 6
8	else	Reduce 6
8	false	Reduce 6
8	float	Reduce 6
8	ident	Reduce 6
8	in	Reduce 6
8	int	Reduce 6
8	then	Reduce 6
8	true	Reduce 6
8	$	Reduce 6
9	(	Reduce 7
9	)	Reduce 7
9	*.	Reduce 7
9	+	Reduce 7
9	+.	Reduce 7
9	,	Reduce 7
9	-	Reduce 7
9	-.	Reduce 7
9	.	Reduce 7
9	/.	Reduce 7
9	;	Reduce 7
9	<	Reduce 7
9	<=	Reduce 7
9	<>	Reduce 7
9	=	Reduce 7
9	>	Reduce 7
9	>=	Reduce 7
9	else	Reduce 7
9	false	Reduce 7
9	float	Reduce 7
9	ident	Reduce 7
9	in	Reduce 7
9	int	Reduce 7
9	then	Reduce 7
9	true	Reduce 7
9	$	Reduce 7
10	(	Shift 4
10	-	Shift 11
10	-.	Shift 13
10	Array.create	Shift 15
10	error	Shift 16
10	false	Shift 6
10	float	Shift 8
10	ident	Shift 9
10	if	Shift 12
10	int	Shift 7
10	let	Shift 14
10	not	Shift 10
10	true	Shift 5
11	(	Shift 4
11	-	Shift 11
11	-.	Shift 13
11	Array.create	Shift 15
11	error	Shift 16
11	false	Shift 6
11	float	Shift 8
11	ident	Shift 9
11	if	Shift 12
11	int	Shift 7
11	let	Shift 14
11	not	Shift 10
11	true	Shift 5
12	(	Shift 4
12	-	Shift 11
12	-.	Shift 13
12	Array.create	Shift 15
12	error	Shift 16
12	false	Shift 6
12	float	Shift 8
12	ident	Shift 9
12	if	Shift 12
12	int	Shift 7
12	let	Shift 14
12	not	Shift 10
12	true	Shift 5
13	(	Shift 4
13	-	Shift 11
13	-.	Shift 13
13	Array.create	Shift 15
13	error	Shift 16
13	false	Shift 6
13	float	Shift 8
13	ident	Shift 9
13	if	Shift 12
13	int	Shift 7
13	let	Shift 14
13	not	Shift 10
13	true	Shift 5
14	(	Shift 41
14	ident	Shift 42
14	rec	Shift 43
15	(	Shift 4
15	false	Shift 6
15	float	Shift 8
15	ident	Shift 9
15	int	Shift 7
15	true	Shift 5
16	)	Reduce 34
16	*.	Reduce 34
16	+	Reduce 34
16	+.	Reduce 34
16	,	Reduce 34
16	-	Reduce 34
16	-.	Reduce 34
16	/.	Reduce 34
16	;	Reduce 34
16	<	Reduce 34
16	<=	Reduce 34
16	<>	Reduce 34
16	=	Reduce 34
16	>	Reduce 34
16	>=	Reduce 34
16	else	Reduce 34
16	in	Reduce 34
16	then	Reduce 34
16	$	Reduce 34
17	(	Shift 4
17	-	Shift 11
17	-.	Shift 13
17	Array.create	Shift 15
17	error	Shift 16
17	false	Shift 6
17	float	Shift 8
17	ident	Shift 9
17	if	Shift 12
17	int	Shift 7
17	let	Shift 14
17	not	Shift 10
17	true	Shift 5
18	(	Shift 4
18	-	Shift 11
18	-.	Shift 13
18	Array.create	Shift 15
18	error	Shift 16
18	false	Shift 6
18	float	Shift 8
18	ident	Shift 9
18	if	Shift 12
18	int	Shift 7
18	let	Shift 14
18	not	Shift 10
18	true	Shift 5
19	(	Shift 4
19	-	Shift 11
19	-.	Shift 13
19	Array.create	Shift 15
19	error	Shift 16
19	false	Shift 6
19	float	Shift 8
19	ident	Shift 9
19	if	Shift 12
19	int	Shift 7
19	let	Shift 14
19	not	Shift 10
19	true	Shift 5
20	(	Shift 4
20	-	Shift 11
20	-.	Shift 13
20	Array.create	Shift 15
20	error	Shift 16
20	false	Shift 6
20	float	Shift 8
20	ident	Shift 9
20	if	Shift 12
20	int	Shift 7
20	let	Shift 14
20	not	Shift 10
20	true	Shift 5
21	(	Shift 4
21	-	Shift 11
21	-.	Shift 13
21	Array.create	Shift 15
21	error	Shift 16
21	false	Shift 6
21	float	Shift 8
21	ident	Shift 9
21	if	Shift 12
21	int	Shift 7
21	let	Shift 14
21	not	Shift 10
21	true	Shift 5
22	(	Shift 4
22	-	Shift 11
22	-.	Shift 13
22	Array.create	Shift 15
22	error	Shift 16
22	false	Shift 6
22	float	Shift 8
22	ident	Shift 9
22	if	Shift 12
22	int	Shift 7
22	let	Shift 14
22	not	Shift 10
22	true	Shift 5
23	(	Shift 4
23	-	Shift 11
23	-.	Shift 13
23	Array.create	Shift 15
23	error	Shift 16
23	false	Shift 6
23	float	Shift 8
23	ident	Shift 9
23	if	Shift 12
23	int	Shift 7
23	let	Shift 14
23	not	Shift 10
23	true	Shift 5
24	(	Shift 4
24	-	Shift 11
24	-.	Shift 13
24	Array.create	Shift 15
24	error	Shift 16
24	false	Shift 6
24	float	Shift 8
24	ident	Shift 9
24	if	Shift 12
24	int	Shift 7
24	let	Shift 14
24	not	Shift 10
24	true	Shift 5
25	(	Shift 4
25	-	Shift 11
25	-.	Shift 13
25	Array.create	Shift 15
25	error	Shift 16
25	false	Shift 6
25	float	Shift 8
25	ident	Shift 9
25	if	Shift 12
25	int	Shift 7
25	let	Shift 14
25	not	Shift 10
25	true	Shift 5
26	(	Shift 4
26	-	Shift 11
26	-.	Shift 13
26	Array.create	Shift 15
26	error	Shift 16
26	false	Shift 6
26	float	Shift 8
26	ident	Shift 9
26	if	Shift 12
26	int	Shift 7
26	let	Shift 14
26	not	Shift 10
26	true	Shift 5
27	(	Shift 4
27	-	Shift 11
27	-.	Shift 13
27	Array.create	Shift 15
27	error	Shift 16
27	false	Shift 6
27	float	Shift 8
27	ident	Shift 9
27	if	Shift 12
27	int	Shift 7
27	let	Shift 14
27	not	Shift 10
27	true	Shift 5
28	(	Shift 4
28	-	Shift 11
28	-.	Shift 13
28	Array.create	Shift 15
28	error	Shift 16
28	false	Shift 6
28	float	Shift 8
28	ident	Shift 9
28	if	Shift 12
28	int	Shift 7
28	let	Shift 14
28	not	Shift 10
28	true	Shift 5
29	(	Shift 4
29	-	Shift 11
29	-.	Shift 13
29	Array.create	Shift 15
29	error	Shift 16
29	false	Shift 6
29	float	Shift 8
29	ident	Shift 9
29	if	Shift 12
29	int	Shift 7
29	let	Shift 14
29	not	Shift 10
29	true	Shift 5
30	(	Shift 4
30	-	Shift 11
30	-.	Shift 13
30	Array.create	Shift 15
30	error	Shift 16
30	false	Shift 6
30	float	Shift 8
30	ident	Shift 9
30	if	Shift 12
30	int	Shift 7
30	let	Shift 14
30	not	Shift 10
30	true	Shift 5
31	(	Reduce 39
31	)	Reduce 39
31	*.	Reduce 39
31	+	Reduce 39
31	+.	Reduce 39
31	,	Reduce 39
31	-	Reduce 39
31	-.	Reduce 39
31	.	Shift 59
31	/.	Reduce 39
31	;	Reduce 39
31	<	Reduce 39
31	<=	Reduce 39
31	<>	Reduce 39
31	=	Reduce 39
31	>	Reduce 39
31	>=	Reduce 39
31	else	Reduce 39
31	false	Reduce 39
31	float	Reduce 39
31	ident	Reduce 39
31	in	Reduce 39
31	int	Reduce 39
31	then	Reduce 39
31	true	Reduce 39
31	$	Reduce 39
32	(	Shift 4
32	)	Reduce 28
32	*.	Reduce 28
32	+	Reduce 28
32	+.	Reduce 28
32	,	Reduce 28
32	-	Reduce 28
32	-.	Reduce 28
32	/.	Reduce 28
32	;	Reduce 28
32	<	Reduce 28
32	<=	Reduce 28
32	<>	Reduce 28
32	=	Reduce 28
32	>	Reduce 28
32	>=	Reduce 28
32	else	Reduce 28
32	false	Shift 6
32	float	Shift 8
32	ident	Shift 9
32	in	Reduce 28
32	int	Shift 7
32	then	Reduce 28
32	true	Shift 5
32	$	Reduce 28
33	(	Shift 61
34	(	Shift 4
34	-	Shift 11
34	-.	Shift 13
34	Array.create	Shift 15
34	error	Shift 16
34	false	Shift 6
34	float	Shift 8
34	ident	Shift 9
34	if	Shift 12
34	int	Shift 7
34	let	Shift 14
34	not	Shift 10
34	true	Shift 5
35	)	Shift 63
35	*.	Shift 27
35	+	Shift 18
35	+.	Shift 26
35	,	Shift 30
35	-	Shift 17
35	-.	Shift 25
35	/.	Shift 28
35	;	Shift 29
35	<	Shift 21
35	<=	Shift 23
35	<>	Shift 20
35	=	Shift 19
35	>	Shift 22
35	>=	Shift 24
36	(	Reduce 2
36	)	Reduce 2
36	*.	Reduce 2
36	+	Reduce 2
36	+.	Reduce 2
36	,	Reduce 2
36	-	Reduce 2
36	-.	Reduce 2
36	.	Reduce 2
36	/.	Reduce 2
36	;	Reduce 2
36	<	Reduce 2
36	<=	Reduce 2
36	<>	Reduce 2
36	=	Reduce 2
36	>	Reduce 2
36	>=	Reduce 2
36	else	Reduce 2
36	false	Reduce 2
36	float	Reduce 2
36	ident	Reduce 2
36	in	Reduce 2
36	int	Reduce 2
36	then	Reduce 2
36	true	Reduce 2
36	$	Reduce 2
37	)	Reduce 10
37	*.	Reduce 10
37	+	Reduce 10
37	+.	Reduce 10
37	,	Reduce 10
37	-	Reduce 10
37	-.	Reduce 10
37	/.	Reduce 10
37	;	Reduce 10
37	<	Reduce 10
37	<=	Reduce 10
37	<>	Reduce 10
37	=	Reduce 10
37	>	Reduce 10
37	>=	Reduce 10
37	else	Reduce 10
37	in	Reduce 10
37	then	Reduce 10
37	$	Reduce 10
38	)	Reduce 11
38	*.	Reduce 11
38	+	Reduce 11
38	+.	Reduce 11
38	,	Reduce 11
38	-	Reduce 11
38	-.	Reduce 11
38	/.	Reduce 11
38	;	Reduce 11
38	<	Reduce 11
38	<=	Reduce 11
38	<>	Reduce 11
38	=	Reduce 11
38	>	Reduce 11
38	>=	Reduce 11
38	else	Reduce 11
38	in	Reduce 11
38	then	Reduce 11
38	$	Reduce 11
39	*.	Shift 27
39	+	Shift 18
39	+.	Shift 26
39	,	Shift 30
39	-	Shift 17
39	-.	Shift 25
39	/.	Shift 28
39	;	Shift 29
39	<	Shift 21
39	<=	Shift 23
39	<>	Shift 20
39	=	Shift 19
39	>	Shift 22
39	>=	Shift 24
39	then	Shift 64
40	)	Reduce 21
40	*.	Reduce 21
40	+	Reduce 21
40	+.	Reduce 21
40	,	Reduce 21
40	-	Reduce 21
40	-.	Reduce 21
40	/.	Reduce 21
40	;	Reduce 21
40	<	Reduce 21
40	<=	Reduce 21
40	<>	Reduce 21
40	=	Reduce 21
40	>	Reduce 21
40	>=	Reduce 21
40	else	Reduce 21
40	in	Reduce 21
40	then	Reduce 21
40	$	Reduce 21
41	ident	Shift 66
42	=	Shift 67
43	ident	Shift 69
44	(	Shift 4
44	.	Shift 59
44	false	Shift 6
44	float	Shift 8
44	ident	Shift 9
44	int	Shift 7
44	true	Shift 5
45	)	Reduce 13
45	*.	Shift 27
45	+	Reduce 13
45	+.	Reduce 13
45	,	Reduce 13
45	-	Reduce 13
45	-.	Reduce 13
45	/.	Shift 28
45	;	Reduce 13
45	<	Reduce 13
45	<=	Reduce 13
45	<>	Reduce 13
45	=	Reduce 13
45	>	Reduce 13
45	>=	Reduce 13
45	else	Reduce 13
45	in	Reduce 13
45	then	Reduce 13
45	$	Reduce 13
46	)	Reduce 12
46	*.	Shift 27
46	+	Reduce 12
46	+.	Reduce 12
46	,	Reduce 12
46	-	Reduce 12
46	-.	Reduce 12
46	/.	Shift 28
46	;	Reduce 12
46	<	Reduce 12
46	<=	Reduce 12
46	<>	Reduce 12
46	=	Reduce 12
46	>	Reduce 12
46	>=	Reduce 12
46	else	Reduce 12
46	in	Reduce 12
46	then	Reduce 12
46	$	Reduce 12
47	)	Reduce 14
47	*.	Shift 27
47	+	Shift 18
47	+.	Shift 26
47	,	Reduce 14
47	-	Shift 17
47	-.	Shift 25
47	/.	Shift 28
47	;	Reduce 14
47	<	Reduce 14
47	<=	Reduce 14
47	<>	Reduce 14
47	=	Reduce 14
47	>	Reduce 14
47	>=	Reduce 14
47	else	Reduce 14
47	in	Reduce 14
47	then	Reduce 14
47	$	Reduce 14
48	)	Reduce 15
48	*.	Shift 27
48	+	Shift 18
48	+.	Shift 26
48	,	Reduce 15
48	-	Shift 17
48	-.	Shift 25
48	/.	Shift 28
48	;	Reduce 15
48	<	Reduce 15
48	<=	Reduce 15
48	<>	Reduce 15
48	=	Reduce 15
48	>	Reduce 15
48	>=	Reduce 15
48	else	Reduce 15
48	in	Reduce 15
48	then	Reduce 15
48	$	Reduce 15
49	)	Reduce 16
49	*.	Shift 27
49	+	Shift 18
49	+.	Shift 26
49	,	Reduce 16
49	-	Shift 17
49	-.	Shift 25
49	/.	Shift 28
49	;	Reduce 16
49	<	Reduce 16
49	<=	Reduce 16
49	<>	Reduce 16
49	=	Reduce 16
49	>	Reduce 16
49	>=	Reduce 16
49	else	Reduce 16
49	in	Reduce 16
49	then	Reduce 16
49	$	Reduce 16
50	)	Reduce 17
50	*.	Shift 27
50	+	Shift 18
50	+.	Shift 26
50	,	Reduce 17
50	-	Shift 17
50	-.	Shift 25
50	/.	Shift 28
50	;	Reduce 17
50	<	Reduce 17
50	<=	Reduce 17
50	<>	Reduce 17
50	=	Reduce 17
50	>	Reduce 17
50	>=	Reduce 17
50	else	Reduce 17
50	in	Reduce 17
50	then	Reduce 17
50	$	Reduce 17
51	)	Reduce 18
51	*.	Shift 27
51	+	Shift 18
51	+.	Shift 26
51	,	Reduce 18
51	-	Shift 17
51	-.	Shift 25
51	/.	Shift 28
51	;	Reduce 18
51	<	Reduce 18
51	<=	Reduce 18
51	<>	Reduce 18
51	=	Reduce 18
51	>	Reduce 18
51	>=	Reduce 18
51	else	Reduce 18
51	in	Reduce 18
51	then	Reduce 18
51	$	Reduce 18
52	)	Reduce 19
52	*.	Shift 27
52	+	Shift 18
52	+.	Shift 26
52	,	Reduce 19
52	-	Shift 17
52	-.	Shift 25
52	/.	Shift 28
52	;	Reduce 19
52	<	Reduce 19
52	<=	Reduce 19
52	<>	Reduce 19
52	=	Reduce 19
52	>	Reduce 19
52	>=	Reduce 19
52	else	Reduce 19
52	in	Reduce 19
52	then	Reduce 19
52	$	Reduce 19
53	)	Reduce 23
53	*.	Shift 27
53	+	Reduce 23
53	+.	Reduce 23
53	,	Reduce 23
53	-	Reduce 23
53	-.	Reduce 23
53	/.	Shift 28
53	;	Reduce 23
53	<	Reduce 23
53	<=	Reduce 23
53	<>	Reduce 23
53	=	Reduce 23
53	>	Reduce 23
53	>=	Reduce 23
53	else	Reduce 23
53	in	Reduce 23
53	then	Reduce 23
53	$	Reduce 23
54	)	Reduce 22
54	*.	Shift 27
54	+	Reduce 22
54	+.	Reduce 22
54	,	Reduce 22
54	-	Reduce 22
54	-.	Reduce 22
54	/.	Shift 28
54	;	Reduce 22
54	<	Reduce 22
54	<=	Reduce 22
54	<>	Reduce 22
54	=	Reduce 22
54	>	Reduce 22
54	>=	Reduce 22
54	else	Reduce 22
54	in	Reduce 22
54	then	Reduce 22
54	$	Reduce 22
55	)	Reduce 24
55	*.	Reduce 24
55	+	Reduce 24
55	+.	Reduce 24
55	,	Reduce 24
55	-	Reduce 24
55	-.	Reduce 24
55	/.	Reduce 24
55	;	Reduce 24
55	<	Reduce 24
55	<=	Reduce 24
55	<>	Reduce 24
55	=	Reduce 24
55	>	Reduce 24
55	>=	Reduce 24
55	else	Reduce 24
55	in	Reduce 24
55	then	Reduce 24
55	$	Reduce 24
56	)	Reduce 25
56	*.	Reduce 25
56	+	Reduce 25
56	+.	Reduce 25
56	,	Reduce 25
56	-	Reduce 25
56	-.	Reduce 25
56	/.	Reduce 25
56	;	Reduce 25
56	<	Reduce 25
56	<=	Reduce 25
56	<>	Reduce 25
56	=	Reduce 25
56	>	Reduce 25
56	>=	Reduce 25
56	else	Reduce 25
56	in	Reduce 25
56	then	Reduce 25
56	$	Reduce 25
57	)	Reduce 32
57	*.	Shift 27
57	+	Shift 18
57	+.	Shift 26
57	,	Shift 30
57	-	Shift 17
57	-.	Shift 25
57	/.	Shift 28
57	;	Shift 29
57	<	Shift 21
57	<=	Shift 23
57	<>	Shift 20
57	=	Shift 19
57	>	Shift 22
57	>=	Shift 24
57	else	Reduce 32
57	in	Reduce 32
57	then	Reduce 32
57	$	Reduce 32
58	)	Reduce 41
58	*.	Shift 27
58	+	Shift 18
58	+.	Shift 26
58	,	Reduce 41
58	-	Shift 17
58	-.	Shift 25
58	/.	Shift 28
58	;	Reduce 41
58	<	Shift 21
58	<=	Shift 23
58	<>	Shift 20
58	=	Shift 19
58	>	Shift 22
58	>=	Shift 24
58	else	Reduce 41
58	in	Reduce 41
58	then	Reduce 41
58	$	Reduce 41
59	(	Shift 71
60	(	Reduce 38
60	)	Reduce 38
60	*.	Reduce 38
60	+	Reduce 38
60	+.	Reduce 38
60	,	Reduce 38
60	-	Reduce 38
60	-.	Reduce 38
60	.	Shift 59
60	/.	Reduce 38
60	;	Reduce 38
60	<	Reduce 38
60	<=	Reduce 38
60	<>	Reduce 38
60	=	Reduce 38
60	>	Reduce 38
60	>=	Reduce 38
60	else	Reduce 38
60	false	Reduce 38
60	float	Reduce 38
60	ident	Reduce 38
60	in	Reduce 38
60	int	Reduce 38
60	then	Reduce 38
60	true	Reduce 38
60	$	Reduce 38
61	(	Shift 4
61	-	Shift 11
61	-.	Shift 13
61	Array.create	Shift 15
61	error	Shift 16
61	false	Shift 6
61	float	Shift 8
61	ident	Shift 9
61	if	Shift 12
61	int	Shift 7
61	let	Shift 14
61	not	Shift 10
61	true	Shift 5
62	)	Reduce 40
62	*.	Shift 27
62	+	Shift 18
62	+.	Shift 26
62	,	Reduce 40
62	-	Shift 17
62	-.	Shift 25
62	/.	Shift 28
62	;	Reduce 40
62	<	Shift 21
62	<=	Shift 23
62	<>	Shift 20
62	=	Shift 19
62	>	Shift 22
62	>=	Shift 24
62	else	Reduce 40
62	in	Reduce 40
62	then	Reduce 40
62	$	Reduce 40
63	(	Reduce 1
63	)	Reduce 1
63	*.	Reduce 1
63	+	Reduce 1
63	+.	Reduce 1
63	,	Reduce 1
63	-	Reduce 1
63	-.	Reduce 1
63	.	Reduce 1
63	/.	Reduce 1
63	;	Reduce 1
63	<	Reduce 1
63	<=	Reduce 1
63	<>	Reduce 1
63	=	Reduce 1
63	>	Reduce 1
63	>=	Reduce 1
63	else	Reduce 1
63	false	Reduce 1
63	float	Reduce 1
63	ident	Reduce 1
63	in	Reduce 1
63	int	Reduce 1
63	then	Reduce 1
63	true	Reduce 1
63	$	Reduce 1
64	(	Shift 4
64	-	Shift 11
64	-.	Shift 13
64	Array.create	Shift 15
64	error	Shift 16
64	false	Shift 6
64	float	Shift 8
64	ident	Shift 9
64	if	Shift 12
64	int	Shift 7
64	let	Shift 14
64	not	Shift 10
64	true	Shift 5
65	)	Shift 74
65	,	Shift 75
66	,	Shift 76
67	(	Shift 4
67	-	Shift 11
67	-.	Shift 13
67	Array.create	Shift 15
67	error	Shift 16
67	false	Shift 6
67	float	Shift 8
67	ident	Shift 9
67	if	Shift 12
67	int	Shift 7
67	let	Shift 14
67	not	Shift 10
67	true	Shift 5
68	in	Shift 78
69	ident	Shift 80
70	)	Reduce 33
70	*.	Reduce 33
70	+	Reduce 33
70	+.	Reduce 33
70	,	Reduce 33
70	-	Reduce 33
70	-.	Reduce 33
70	.	Shift 59
70	/.	Reduce 33
70	;	Reduce 33
70	<	Reduce 33
70	<=	Reduce 33
70	<>	Reduce 33
70	=	Reduce 33
70	>	Reduce 33
70	>=	Reduce 33
70	else	Reduce 33
70	in	Reduce 33
70	then	Reduce 33
70	$	Reduce 33
71	(	Shift 4
71	-	Shift 11
71	-.	Shift 13
71	Array.create	Shift 15
71	error	Shift 16
71	false	Shift 6
71	float	Shift 8
71	ident	Shift 9
71	if	Shift 12
71	int	Shift 7
71	let	Shift 14
71	not	Shift 10
71	true	Shift 5
72	)	Shift 82
72	*.	Shift 27
72	+	Shift 18
72	+.	Shift 26
72	,	Shift 30
72	-	Shift 17
72	-.	Shift 25
72	/.	Shift 28
72	;	Shift 29
72	<	Shift 21
72	<=	Shift 23
72	<>	Shift 20
72	=	Shift 19
72	>	Shift 22
72	>=	Shift 24
73	*.	Shift 27
73	+	Shift 18
73	+.	Shift 26
73	,	Shift 30
73	-	Shift 17
73	-.	Shift 25
73	/.	Shift 28
73	;	Shift 29
73	<	Shift 21
73	<=	Shift 23
73	<>	Shift 20
73	=	Shift 19
73	>	Shift 22
73	>=	Shift 24
73	else	Shift 83
74	=	Shift 84
75	ident	Shift 85
76	ident	Shift 86
77	*.	Shift 27
77	+	Shift 18
77	+.	Shift 26
77	,	Shift 30
77	-	Shift 17
77	-.	Shift 25
77	/.	Shift 28
77	;	Shift 29
77	<	Shift 21
77	<=	Shift 23
77	<>	Shift 20
77	=	Shift 19
77	>	Shift 22
77	>=	Shift 24
77	in	Shift 87
78	(	Shift 4
78	-	Shift 11
78	-.	Shift 13
78	Array.create	Shift 15
78	error	Shift 16
78	false	Shift 6
78	float	Shift 8
78	ident	Shift 9
78	if	Shift 12
78	int	Shift 7
78	let	Shift 14
78	not	Shift 10
78	true	Shift 5
79	=	Shift 89
80	=	Reduce 37
80	ident	Shift 80
81	)	Shift 91
81	*.	Shift 27
81	+	Shift 18
81	+.	Shift 26
81	,	Shift 30
81	-	Shift 17
81	-.	Shift 25
81	/.	Shift 28
81	;	Shift 29
81	<	Shift 21
81	<=	Shift 23
81	<>	Shift 20
81	=	Shift 19
81	>	Shift 22
81	>=	Shift 24
82	(	Reduce 8
82	)	Reduce 8
82	*.	Reduce 8
82	+	Reduce 8
82	+.	Reduce 8
82	,	Reduce 8
82	-	Reduce 8
82	-.	Reduce 8
82	.	Reduce 8
82	/.	Reduce 8
82	;	Reduce 8
82	<	Reduce 8
82	<-	Shift 92
82	<=	Reduce 8
82	<>	Reduce 8
82	=	Reduce 8
82	>	Reduce 8
82	>=	Reduce 8
82	else	Reduce 8
82	false	Reduce 8
82	float	Reduce 8
82	ident	Reduce 8
82	in	Reduce 8
82	int	Reduce 8
82	then	Reduce 8
82	true	Reduce 8
82	$	Reduce 8
83	(	Shift 4
83	-	Shift 11
83	-.	Shift 13
83	Array.create	Shift 15
83	error	Shift 16
83	false	Shift 6
83	float	Shift 8
83	ident	Shift 9
83	if	Shift 12
83	int	Shift 7
83	let	Shift 14
83	not	Shift 10
83	true	Shift 5
84	(	Shift 4
84	-	Shift 11
84	-.	Shift 13
84	Array.create	Shift 15
84	error	Shift 16
84	false	Shift 6
84	float	Shift 8
84	ident	Shift 9
84	if	Shift 12
84	int	Shift 7
84	let	Shift 14
84	not	Shift 10
84	true	Shift 5
85	)	Reduce 42
85	,	Reduce 42
86	)	Reduce 43
86	,	Reduce 43
87	(	Shift 4
87	-	Shift 11
87	-.	Shift 13
87	Array.create	Shift 15
87	error	Shift 16
87	false	Shift 6
87	float	Shift 8
87	ident	Shift 9
87	if	Shift 12
87	int	Shift 7
87	let	Shift 14
87	not	Shift 10
87	true	Shift 5
88	)	Reduce 27
88	*.	Shift 27
88	+	Shift 18
88	+.	Shift 26
88	,	Shift 30
88	-	Shift 17
88	-.	Shift 25
88	/.	Shift 28
88	;	Shift 29
88	<	Shift 21
88	<=	Shift 23
88	<>	Shift 20
88	=	Shift 19
88	>	Shift 22
88	>=	Shift 24
88	else	Reduce 27
88	in	Reduce 27
88	then	Reduce 27
88	$	Reduce 27
89	(	Shift 4
89	-	Shift 11
89	-.	Shift 13
89	Array.create	Shift 15
89	error	Shift 16
89	false	Shift 6
89	float	Shift 8
89	ident	Shift 9
89	if	Shift 12
89	int	Shift 7
89	let	Shift 14
89	not	Shift 10
89	true	Shift 5
90	=	Reduce 36
91	(	Reduce 8
91	)	Reduce 8
91	*.	Reduce 8
91	+	Reduce 8
91	+.	Reduce 8
91	,	Reduce 8
91	-	Reduce 8
91	-.	Reduce 8
91	.	Reduce 8
91	/.	Reduce 8
91	;	Reduce 8
91	<	Reduce 8
91	<=	Reduce 8
91	<>	Reduce 8
91	=	Reduce 8
91	>	Reduce 8
91	>=	Reduce 8
91	else	Reduce 8
91	false	Reduce 8
91	float	Reduce 8
91	ident	Reduce 8
91	in	Reduce 8
91	int	Reduce 8
91	then	Reduce 8
91	true	Reduce 8
91	$	Reduce 8
92	(	Shift 4
92	-	Shift 11
92	-.	Shift 13
92	Array.create	Shift 15
92	error	Shift 16
92	false	Shift 6
92	float	Shift 8
92	ident	Shift 9
92	if	Shift 12
92	int	Shift 7
92	let	Shift 14
92	not	Shift 10
92	true	Shift 5
93	)	Reduce 20
93	*.	Shift 27
93	+	Shift 18
93	+.	Shift 26
93	,	Shift 30
93	-	Shift 17
93	-.	Shift 25
93	/.	Shift 28
93	;	Reduce 20
93	<	Shift 21
93	<=	Shift 23
93	<>	Shift 20
93	=	Shift 19
93	>	Shift 22
93	>=	Shift 24
93	else	Reduce 20
93	in	Reduce 20
93	then	Reduce 20
93	$	Reduce 20
94	*.	Shift 27
94	+	Shift 18
94	+.	Shift 26
94	,	Shift 30
94	-	Shift 17
94	-.	Shift 25
94	/.	Shift 28
94	;	Shift 29
94	<	Shift 21
94	<=	Shift 23
94	<>	Shift 20
94	=	Shift 19
94	>	Shift 22
94	>=	Shift 24
94	in	Shift 98
95	)	Reduce 26
95	*.	Shift 27
95	+	Shift 18
95	+.	Shift 26
95	,	Shift 30
95	-	Shift 17
95	-.	Shift 25
95	/.	Shift 28
95	;	Shift 29
95	<	Shift 21
95	<=	Shift 23
95	<>	Shift 20
95	=	Shift 19
95	>	Shift 22
95	>=	Shift 24
95	else	Reduce 26
95	in	Reduce 26
95	then	Reduce 26
95	$	Reduce 26
96	*.	Shift 27
96	+	Shift 18
96	+.	Shift 26
96	,	Shift 30
96	-	Shift 17
96	-.	Shift 25
96	/.	Shift 28
96	;	Shift 29
96	<	Shift 21
96	<=	Shift 23
96	<>	Shift 20
96	=	Shift 19
96	>	Shift 22
96	>=	Shift 24
96	in	Reduce 35
97	)	Reduce 31
97	*.	Shift 27
97	+	Shift 18
97	+.	Shift 26
97	,	Shift 30
97	-	Shift 17
97	-.	Shift 25
97	/.	Shift 28
97	;	Reduce 31
97	<	Shift 21
97	<=	Shift 23
97	<>	Shift 20
97	=	Shift 19
97	>	Shift 22
97	>=	Shift 24
97	else	Reduce 31
97	in	Reduce 31
97	then	Reduce 31
97	$	Reduce 31
98	(	Shift 4
98	-	Shift 11
98	-.	Shift 13
98	Array.create	Shift 15
98	error	Shift 16
98	false	Shift 6
98	float	Shift 8
98	ident	Shift 9
98	if	Shift 12
98	int	Shift 7
98	let	Shift 14
98	not	Shift 10
98	true	Shift 5
99	)	Reduce 30
99	*.	Shift 27
99	+	Shift 18
99	+.	Shift 26
99	,	Shift 30
99	-	Shift 17
99	-.	Shift 25
99	/.	Shift 28
99	;	Shift 29
99	<	Shift 21
99	<=	Shift 23
99	<>	Shift 20
99	=	Shift 19
99	>	Shift 22
99	>=	Shift 24
99	else	Reduce 30
99	in	Reduce 30
99	then	Reduce 30
99	$	Reduce 30
